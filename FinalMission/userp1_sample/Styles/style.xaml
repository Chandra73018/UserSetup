<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Colors/TealShades.xaml"/>
        <ResourceDictionary Source="../Colors/GrayShades.xaml"/>
        <ResourceDictionary Source="../Colors/PrimaryColors.xaml"/>
        <ResourceDictionary Source="TextBlockStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <!--Border styling-->
    <SolidColorBrush x:Key="Border.Level0.Background" Color="{StaticResource KodakAlarisTeal}"/>
    <SolidColorBrush x:Key="Border.Level0" Color="{StaticResource Gray7}"/>

    <SolidColorBrush x:Key="Border.Level1.Background" Color="{StaticResource Gray6}"/>
    <SolidColorBrush x:Key="Border.Level1" Color="{StaticResource Gray5}"/>

    <SolidColorBrush x:Key="Border.Level2.Background" Color="{StaticResource Gray7}"/>
    <SolidColorBrush x:Key="Border.Level2" Color="{StaticResource Gray5}"/>

    <SolidColorBrush x:Key="Border.Level3.Background" Color="{StaticResource Gray8}"/>
    <SolidColorBrush x:Key="Border.Level3" Color="{StaticResource Gray6}"/>

    <SolidColorBrush x:Key="Border.Level4.Background" Color="{StaticResource White}"/>
    <SolidColorBrush x:Key="Border.Level4" Color="{StaticResource Gray7}"/>

    <Style x:Key="BorderStyleLevel2" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Border.Level2.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border.Level2}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
    </Style>

    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="{StaticResource White}"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="{StaticResource Gray6}"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="{StaticResource Black}"/>

    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="{StaticResource White}" Opacity="0.4"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="{StaticResource Gray6}" Opacity="0.4"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="{StaticResource Black}" Opacity="0.4"/>

    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="{StaticResource KodakAlarisTeal}"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="{StaticResource Gray5}"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="{StaticResource White}"/>

    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="{StaticResource Teal4}"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{StaticResource Gray5}"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="{StaticResource White}"/>

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource OptionMark.Static.Glyph}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}">
                                    <Setter Property="FontSize" Value="11"/>
                                </Style>
                                <Style TargetType="Label">
                                    <Setter Property="FontSize" Value="11"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            <Setter Property="IsEnabled" TargetName="contentPresenter" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="StdButton.Foreground" Color="{StaticResource Black}"/>

    <SolidColorBrush x:Key="StdButton.Static.Background" Color="{StaticResource White}"/>
    <SolidColorBrush x:Key="StdButton.Static.Border" Color="{StaticResource Gray6}"/>

    <SolidColorBrush x:Key="StdButton.Disabled.Background" Color="{StaticResource White}" Opacity="0.4"/>
    <SolidColorBrush x:Key="StdButton.Disabled.Border" Color="{StaticResource Gray6}" Opacity="0.4"/>
    <SolidColorBrush x:Key="StdButton.Disabled.Foreground" Color="{StaticResource Black}" Opacity="0.4"/>

    <SolidColorBrush x:Key="StdButton.MouseOver.Background" Color="{StaticResource Teal1}"/>
    <SolidColorBrush x:Key="StdButton.MouseOver.Border" Color="{StaticResource Teal1}"/>

    <SolidColorBrush x:Key="StdButton.Pressed.Background" Color="{StaticResource Teal2}"/>
    <SolidColorBrush x:Key="StdButton.Pressed.Border" Color="{StaticResource Gray5}"/>

    <Style x:Key="StandardButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource StdButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource StdButton.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource StdButton.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource StdButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StdButton.MouseOver.Border}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource StdButton.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource StdButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StdButton.Pressed.Border}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource StdButton.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource StdButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource StdButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource StdButton.Disabled.Foreground}"/>
                            <Setter Property="Opacity" Value="0.75"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>